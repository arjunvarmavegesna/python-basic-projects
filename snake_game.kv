from kivy.app import App
from kivy.uix.widget import Widget
from kivy.uix.label import Label
from kivy.clock import Clock
from kivy.properties import ListProperty, NumericProperty
from kivy.core.window import Window
import random

# Game constants
GRID_SIZE = 20
SPEED = 0.15   # smaller = faster


class SnakeGame(Widget):
    snake = ListProperty()
    food = ListProperty([0, 0])
    direction = ListProperty([1, 0])  # start moving right
    score = NumericProperty(0)

    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.reset_game()
        Clock.schedule_interval(self.update, SPEED)

    def reset_game(self):
        self.snake = [[5, 5], [4, 5], [3, 5]]
        self.spawn_food()
        self.direction = [1, 0]
        self.score = 0

    def spawn_food(self):
        max_x = int(self.width / GRID_SIZE) - 1
        max_y = int(self.height / GRID_SIZE) - 1
        self.food = [random.randint(0, max_x), random.randint(0, max_y)]

    def on_size(self, *args):
        self.spawn_food()

    def update(self, dt):
        if not self.snake:
            return

        head_x, head_y = self.snake[0]
        new_x = head_x + self.direction[0]
        new_y = head_y + self.direction[1]

        # check collisions
        if (
            new_x < 0 or new_y < 0 or
            new_x >= int(self.width / GRID_SIZE) or
            new_y >= int(self.height / GRID_SIZE) or
            [new_x, new_y] in self.snake
        ):
            self.game_over()
            return

        # insert new head
        self.snake.insert(0, [new_x, new_y])

        # check if food eaten
        if [new_x, new_y] == self.food:
            self.score += 1
            self.spawn_food()
        else:
            self.snake.pop()

        self.canvas.clear()
        self.draw_snake()
        self.draw_food()

    def draw_snake(self):
        with self.canvas:
            from kivy.graphics import Color, Rectangle
            Color(0, 1, 0)  # green snake
            for x, y in self.snake:
                Rectangle(pos=(x * GRID_SIZE, y * GRID_SIZE),
                          size=(GRID_SIZE, GRID_SIZE))

    def draw_food(self):
        with self.canvas:
            from kivy.graphics import Color, Ellipse
            Color(1, 0, 0)  # red food
            Ellipse(pos=(self.food[0] * GRID_SIZE, self.food[1] * GRID_SIZE),
                    size=(GRID_SIZE, GRID_SIZE))

    def game_over(self):
        self.snake = []
        self.canvas.clear()
        self.add_widget(Label(text="GAME OVER\nScore: " + str(self.score),
                              font_size=40,
                              center=self.center))

    def on_touch_up(self, touch):
        # Swipe controls for mobile
        dx = touch.x - touch.opos[0]
        dy = touch.y - touch.opos[1]
        if abs(dx) > abs(dy):  # horizontal move
            if dx > 0 and self.direction != [-1, 0]:
                self.direction = [1, 0]
            elif dx < 0 and self.direction != [1, 0]:
                self.direction = [-1, 0]
        else:  # vertical move
            if dy > 0 and self.direction != [0, -1]:
                self.direction = [0, 1]
            elif dy < 0 and self.direction != [0, 1]:
                self.direction = [0, -1]


class SnakeApp(App):
    def build(self):
        Window.size = (600, 400)  # window size (ignored on phone)
        game = SnakeGame()
        return game


if __name__ == '__main__':
    SnakeApp().run()
